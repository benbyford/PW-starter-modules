<?php
/**
 * HotUserSwap (0.0.1)
 * HotUserSwap allows quick swap between users in the site front end
 *
 * @author Ben Byford
 *
 * Hookable functions: ___render, ___hotSwitch
 *
 * ProcessWire 2.x
 * Copyright (C) 2011 by Ryan Cramer
 * Licensed under GNU/GPL v2, see LICENSE.TXT
 *
 * http://www.processwire.com
 * http://www.ryancramer.com
 *
 */

class HotSwapUser extends WireData implements Module {

	public static function getModuleInfo() {
		return array(
			'title' => "HotSwapUser",
			'version' => "0.0.1",
			'summary' => "HotSwapUser allows quick swap between users in the site front end",
			'author' => "Ben Byford",
			'href' => "https://github.com/benbyford/PW-starter-modules/HotUserSwap/",
			'icon' => "share",
			'autoload' => true,
			'singular' => true,
			'requires' => "ProcessWire>=2.5",
		);
	}

	public $allowed = false;
	public $currentUser;

	public function init() {

		// get current user
		$this->currentUser = $this->users->getCurrentUser();

		// add hook before PageRender to execute hotSwitch function
		// $this->addHookBefore("PageRender::renderPage", $this, "hotSwitch");
		$this->hotSwitch();

		// add hotswitch
		$this->session->hotSwitchCounter = true;
	}

	public function ___hotSwitch() {

		// get page inputs
		$inputUser = $this->input->get('hotSwitch');

		// if user var found
		if($inputUser){

			// get current user
			$currentUser = $this->users->getCurrentUser();

			// get new user to switch too
			$newUser = $this->users->get($inputUser);

			// if input user not current user
			if($currentUser->name != $inputUser){

				// login new user
				$this->loginNewUser($newUser, $currentUser);

			}elseif ($currentUser->name == $inputUser){

				// new user is the current user so tell them so.
				$this->warning('You are already user: ' . $inputUser);

			}else{
				$this->warning('Something went wrong with hotSwitch');
			}
		} // end if

		// ouput messages to admin
		$this->outputToAdmin();
	}

	// login new user
	public function ___loginNewUser($user, $lastUser){

		// logout current user session
		$this->session->logout();

		// check to see if user allowed to login
		$allowed = $this->session->allowLogin($user);

		// check user for hotSwtich permission
		$hotSwitch = true; //
		// ******** AMEND ABOVE ***********

		// if user allowed then logout current user and login new user
		if($allowed && $hotSwitch){

			// find hotSwitch password
			$hotSwitchPass = true;

			// check to see if password empty
			if($hotSwitchPass){

				$newPass = 'something';
				$user->pass = $newPass;

				// login new user session
				$this->session->login($user, $newPass);

				$this->message('Hot switch user successful, you are now <b>: ' . $user->name . '</b>', Notice::allowMarkup);

				// set current user
				$this->currentUser = $user;

			}else{

				// no password set
				$this->warning('Hi <b>'. $lastUser->name .'</b>,  hotSwitch module requires a <a href="/admin">password</a> to be set', Notice::allowMarkup);
			}

		}else{

			$this->message('Hi <b>'. $lastUser->name .'</b>, hot switch user to:' . $userNames, Notice::allowMarkup);
		}
	}

	private function outputToAdmin(){

		// get all users
		$allUsers = $this->users;

		$userNames = '';
		foreach ($allUsers as $key => $userPage) {
			// if user name
			if($this->currentUser->name != $userPage->name){
				$userNames .= '<b><a href="'. $this->page->url .'?hotSwitch='.$userPage->name.'">' . $userPage->name . '</a></b>,';
			}
		}

		// add hotSwitch user output on admin pages as messages
		$this->message('Hi <b>'. $this->currentUser->name .'</b>, hot switch user to:' . $userNames, Notice::allowMarkup);

	}

	// render hotSwitch links on the non-admin site pages
	public function ___render() {
		$allUsers = $this->users;
		$currentUser = $this->users->getCurrentUser();
		$userNames = '';

		foreach ($allUsers as $userPage) {
			if($currentUser->name != $userPage->name){
				$userNames .= ' <a href="'. $this->page->url .'?hotSwitch='.$userPage->name.'">' . $userPage->name . '</a>,';
			}
		}
		if($allowed){
			return "Your allowed in";
		}else{
			return "Hello " . $currentUser->name . ', hotSwitch to: ' . $userNames . $inputs;
		}
	}

}
